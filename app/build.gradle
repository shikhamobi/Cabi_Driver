buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'

    }


}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


repositories {
    maven { url 'https://maven.fabric.io/public' }
}

//android {
//    compileSdkVersion 24
//    buildToolsVersion "25.0.0"
//
//    defaultConfig {
//        applicationId "com.cabi.driver"
//        minSdkVersion 15
//        targetSdkVersion 23
//        vectorDrawables.useSupportLibrary = true
//        multiDexEnabled true
//    }
//    allprojects {
//        repositories {
//            maven { url "https://jitpack.io" }
//        }
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
//        }
//    }
//
//    dexOptions {
//        incremental true
//        javaMaxHeapSize "4g"
//    }
//}
android {
    compileSdkVersion 26
    buildToolsVersion '28.0.3'

    signingConfigs {
        release_config {
            try {
                storeFile file('/home/developer/Music/cabi/Cabi_Andr_driv/app/key')
                storePassword 'cabidriver'
                keyAlias 'cabi'
                keyPassword 'cabidriver'
            } catch (Exception ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }

    defaultConfig {
        applicationId "com.cabi.driver"
        minSdkVersion 16
        targetSdkVersion 26
        multiDexEnabled true
        signingConfig signingConfigs.release_config

        vectorDrawables.useSupportLibrary = true

        manifestPlaceholders = [appName: "Cabi Partner"]
//        compileOptions {
//            sourceCompatibility JavaVersion.VERSION_1_7
//            targetCompatibility JavaVersion.VERSION_1_7
//        }
    }

    allprojects {
        repositories {
            maven { url "https://jitpack.io" }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "STATIC_URL", '"http://loadtest.taximobility.com/mobileapi117/index/"'
            buildConfigField "String", "CURRENT_COUNTRY_CODE", '"SAU"'
            // resValue "string", "googleID", "AIzaSyDewldf9PLpuky-ALFglTIhNdU5mp82G9k"
            resValue "string", "googleID", "AIzaSyD7zv0GV1pqixXaPGTaiys_GoGDKlitjuY"

            //proguardFiles getDefaultProguardFile('proguard-rules.txt')
        }
        debug {
            minifyEnabled false
            debuggable true
            buildConfigField "String", "STATIC_URL", '"http://loadtest.taximobility.com/mobileapi117/index/"'
            buildConfigField "String", "CURRENT_COUNTRY_CODE", '"SAU"'
            //resValue "string", "googleID", "AIzaSyDewldf9PLpuky-ALFglTIhNdU5mp82G9k"
            resValue "string", "googleID", "AIzaSyD7zv0GV1pqixXaPGTaiys_GoGDKlitjuY"
        }
    }
//    lintOptions {
//        checkReleaseBuilds false
//        abortOnError false
//    }
//    dexOptions {
//        incremental true
//        javaMaxHeapSize "4g"
//    }

    lintOptions {
        checkReleaseBuilds false

        disable 'InvalidPackage'
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true

    }
}

dependencies {
    implementation project(':library')
    implementation files('libs/jsoup-1.7.1.jar')
    implementation files('libs/retrofit-1.9.0.jar')
    implementation files('libs/universal-image-loader-1.9.0-with-sources.jar')
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    implementation ('io.socket:socket.io-client:0.8.3') {
        exclude group: 'org.json', module: 'json'
    }
    //compile 'com.android.support:appcompat-v7:24.0.0'
    implementation project(':aa')
    implementation 'com.github.yalantis:ucrop:2.2.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.facebook.android:facebook-android-sdk:4.34.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-gcm:16.0.0'
    implementation 'com.google.android.gms:play-services-places:16.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.google.maps.android:android-maps-utils:0.4.4'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'com.google.firebase:firebase-crash:16.2.1'

  //  implementation 'com.google.firebase:firebase-core:16.0.6'

    implementation project(':telrlibrary-release')
    implementation('org.simpleframework:simple-xml:2.7.1', {
        exclude group: 'stax', module: 'stax'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'xpp3', module: 'xpp3'
    })

}
apply plugin: 'com.google.gms.google-services'